class Array extends Expression {
array_type: ArrayType;
len: Int;
my_array: array Float;


get_arrayLength = {|()-> !this.len}


static make =  {|(ini, leng) ->    
        let res = new Array in
	res.my_array  = newarray ini leng;
 	res.len = leng;
	(Expression.make res [])
}

static parser = { parseUpper "Array" (Array.make()) }
((stx_parser "Array") .>>  (parseAnyString (fun x -> Strings.make x []))) .>>= (fun x -> (stx_parser "\"") .>> (ret x))

with Type.parser += | view(Array.parser,Parsed ps) -> Parsed ps


}

(* this is a class array with the type of array inside *)
(* we have to create another class array with has length and initilize value *)

