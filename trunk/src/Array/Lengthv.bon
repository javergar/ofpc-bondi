class Lengthv extends Operator {


static make =  { fun args -> 
	let res = new Lengthv in
	Expression.make res args
} 

static parser = { (stx_parser "lengthv") .>>  ret (Lengthv.make []) }


type_scheme = { |() -> 
  let x = TypeVariable.next() in
	FunctionType.make(x,IntType.make())
}

reduce = {  |() -> match this.get_arguments() with 
	| (Cons x args) ->  Some (Integer.make (x.get_arrayLength()) args)
	| _ -> None

}

headString = { |() -> "lengthv" }
with Expression.simpleParser += | view(Lengthv.parser,Parsed ps) -> Parsed ps
}


