class LinearType extends Type {
linArgumentType: Type;

get_linArgumentType = { | () -> !this.linArgumentType}

(* create an instance of the class *)
static make = { | ty1 ->
let res = new LinearType in
res.linArgumentType = ty1;
(res:Type)
}

(* parser *)
static discontinuous parser = {
((stx_parser "lin") .>> Type.parser) .>>= (fun x -> ret (LinearType.make (x)))
}


headString = { |() -> "LinearType" }
with Type.simpleParser += | view(LinearType.parser,Parsed ps) -> Parsed ps
}



