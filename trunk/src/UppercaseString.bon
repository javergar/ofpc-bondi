class UppercaseString extends DatumOperator
{	
	static make =  { fun args -> Expression.make (new UppercaseString) args } 
	

	static parser = { (stx_parser "UppercaseString") .>> ret (UppercaseString.make [])}


	(* String -> String *)
	type_scheme = { |() -> 
	  FunctionType.make (StringType.make(),StringType.make())
	}

	reduce = { |() -> match this.get_arguments() with
		((| Cons x args -> Some (Strings.make (uppercasestring((x.get_string_value()))) args)
		| _ -> None): List Expression -> Maybe Expression)
	}

	(* Printing *)
	headString = { |() -> "UppercaseString" }
	with 
	Expression.simpleParser += |view(UppercaseString.parser,Parsed ps) -> Parsed ps 

	(* Testing 
	let test = Expression.parse "UppercaseString \"myname\"";;
	test.eval();;
	*)
}
