class Boolean_wildcard extends Boolean {

  (* Making *)

  static make = {
    fun x -> let bw = new Boolean_wildcard in
    bw.value = x;
    Expression.make bw []
  }
  
  (* Parsing *)

  static parser = {
    (stx_parser "_Bool") .>>
    ret (Boolean_wildcard.make _)
  }

  (* Printing *)

  headString = { |() -> (toString ( this.get_value() ))
  }
  with Expression.simpleParser += | view(Boolean_wildcard.parser, Parsed ps) -> Parsed ps


  (* Testing
  
  let parse = Expression.parse;;
  let ctxt0 = Context.make1 (TypeVariable.idSub);;

  parse "_Bool";;
  parse "_Bool".infer_type(ctxt0) (TypeVariable.next());;

  *)

}
