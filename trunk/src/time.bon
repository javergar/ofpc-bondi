class Time extends DatumOperator {
static make =  { fun args -> Expression.make (new Time) args } 
static parser = { (stx_parser "time") .>>  (ret (Time.make []))}
type_scheme = { |() -> 
    FunctionType.make2 (IntType.make(),IntType.make(),IntType.make())
}
reduce = { |() -> match this.get_arguments() with 
  ((| (Cons x (Cons y args)) -> Some (Integer.make ((x.get_int_value()) timesint (y.get_int_value())) args)
    | _ -> None) : List Expression -> Maybe Expression)
}
headString = { |() -> "time" }
with Expression.simpleParser += | view(Time.parser,Parsed ps) -> Parsed ps
}

let t1 = Expression.parse "time 5 5";;
t1.eval();;



